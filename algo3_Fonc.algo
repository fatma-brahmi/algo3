ALGORITHM produit scalaire
FUNCTION dot_product(v1 : ARRAY_OF FLOAT[] ,v2 : ARRAY_OF FLOAT[] , ) : FLOAT
VAR
    i  : INTEGER;
    ps : FLOAT;
BEGIN
    ps :=0;
FOR i FROM 0 TO 2  DO
    ps := ps + V1(i)*V2(i);
    
END_FOR 
RETURN ps; 
END
VAR
    V1,V2 : ARRAY_OF FLOAT[3];
    i,j : INTEGER;
    prodS,ps : FLOAT;
BEGIN
    FOR i FROM 0 TO 2 DO
        WRITE ("dooner l'elemenet" , i+1, "de la vecteur V1" )
        WRITE ("dooner l'elemenet" , i+1, "de la vecteur V2" )
    read (V1(i));
    read (V2(i));
    dot_product(V1, V2);
   
    END_FOR
   dot_product(V1, V2);
FOR i FROM 0 TO V1.length   DO 
   FOR j FROM j=i + 1 TO V2.length DO
      IF (V1[i] = V2[j] and prodS=0 ) THEN
          Write('are orthogonal');
    ELSE
        Write('not orthogonal');
      END_IF
  END_FOR
END_FOR

END
